<?xml version="1.0" encoding="UTF-8"?>
<!-- Author: Tony McGuckin, IBM -->
<xp:view xmlns:xp="http://www.ibm.com/xsp/core"
	xmlns:xc="http://www.ibm.com/xsp/custom"
	xmlns:xe="http://www.ibm.com/xsp/coreex" id="viewDocID" >
	<xp:this.resources>
		<xp:script src="/xpTopicThreadState.jss" clientSide="false"></xp:script>
	</xp:this.resources>
	<xp:this.beforePageLoad><![CDATA[#{javascript://
		TopicThreadState.init();
		if( !param.documentId && param.parentId ){
			TopicThreadState.initNewReply();
		}
	}]]></xp:this.beforePageLoad>

	<xp:this.afterPageLoad><![CDATA[#{javascript:
		viewScope.mainDetailLoadType = 'body';
		viewScope.showReviewers = false;
		viewScope.showReviewSettings = false;
	}]]></xp:this.afterPageLoad>
	<xc:layout id="forumCC">
		<xe:this.facets>
			<xp:panel xp:key="MiddleColumn">
				<xp:this.data>
						<xp:dominoDocument
							var="document1" documentId="#{param.documentId}" action="openDocument">
						</xp:dominoDocument>
				</xp:this.data>
			
				<xp:panel styleClass="lotusForum">
					<xe:listInline>
						<xc:breadcrumb></xc:breadcrumb>
						<xp:link loaded="${javascript:document1.isResponse(); }"
							text="Show Entire Thread" id="link3" value="/viewDocument.xsp">
							<xp:this.parameters>
								<xp:parameter name="documentId">
									<xp:this.value><![CDATA[${javascript:
										var parentUNID = document1.getDocument().getParentDocumentUNID();
										if( parentUNID ){
											var mainUNID;
											
											for(var ancestorUNID = parentUNID; ancestorUNID; ){
												mainUNID = ancestorUNID;
												try{
													var ancestorDoc = database.getDocumentByUNID(ancestorUNID);
													ancestorUNID = ancestorDoc.getParentDocumentUNID()
												}catch(e){
													// parent has been deleted or some similar problem
													{
														var msgString = strings.problem_finding_main_document;
														msgString = I18n.format(msgString, ancestorUNID);
														var msgObj = new javax.faces.application.FacesMessage(
															javax.faces.application.FacesMessage.SEVERITY_ERROR, msgString, msgString);
														facesContext.addMessage(null, msgObj);
													}
													mainUNID = null;
													break;
												}
											} 
											return mainUNID;
										}
									}]]></xp:this.value>
								</xp:parameter>
							</xp:this.parameters>
						</xp:link>
					</xe:listInline>
					
					<xp:panel styleClass="replyCount">
						<xp:label loaded="${javascript: !document1.isResponse();}">
							<xp:this.value><![CDATA[#{javascript:
								var replyCount;
								var viewPanel = getComponent('forumView1');
								var dataModel = viewPanel.getDataModel();
								var replyCount = dataModel.getRowCount();
								if( replyCount >= viewPanel.getRows() ){
									if( dataModel.canHaveMoreRows() ){
										var computeLimit = 500;
										var currentDisplayableRows = viewPanel.getRows();
										computeLimit = currentDisplayableRows > computeLimit ? 
											currentDisplayableRows : computeLimit;
										replyCount = dataModel.hasMoreRows(computeLimit);
										if( replyCount >= computeLimit ){
											// "500 or more replies"
											var limitStr = java.lang.Integer.toString((computeLimit).intValue());
											var msg = strings.topicThread_replies_limit;
											return I18n.format(msg, limitStr);
										}
									}
								}
								if( replyCount == 0 ){
									return strings.topicThread_replies_count_zero;
								}
								if( replyCount == 1 ){
									return strings.topicThread_replies_count_one;
								}
								var countStr = java.lang.Integer.toString((replyCount).intValue());
								return I18n.format(strings.topicThread_replies_count, countStr);
							}]]></xp:this.value>
						</xp:label>	
					</xp:panel>

					<xe:dynamicContent id="currentDocArea">
						<xe:this.defaultFacet><![CDATA[#{javascript://
							if( TopicThreadState.isCurrentEdit() ){
								var form;
								if( requestScope.currentDocForm ){ 
									// published by the Edit action
									form = requestScope.currentDocForm;
								}else{
									form = database.getDocumentByUNID(param.documentId).getItemValueString('form');
								}
								if( form == 'MainTopic' ){
									return 'editTopic';
								}
								if( form == 'ResponseToResponse' ){
									return 'editResponseToResponse'
								}
								return 'editResponse';
							}
							return 'read';
						}]]></xe:this.defaultFacet>
						<xe:this.facets>
							<xp:panel xp:key="read">
								<xe:dynamicContent id="currentDetailArea">
									<xe:forumPost id="forumPost2" xp:key="read">
										<xp:this.facets>
											<xp:text escape="true" xp:key="postTitle" styleClass="documentSubject"
												id="computedField14" tagName="h4">
												<xp:this.value><![CDATA[#{javascript:document1.getItemValueString("Subject")}]]></xp:this.value>
											</xp:text>
											<xp:panel xp:key="postDetails">
												<xp:panel rendered="#{javascript:viewScope.mainDetailLoadType == 'abstract'}">
													<xp:text escape="true" id="computedField1">
														<xp:this.value><![CDATA[#{javascript:document1.getItemValueString("Abstract")}]]></xp:this.value>
													</xp:text>
												</xp:panel>
												<xp:panel rendered="#{javascript:viewScope.mainDetailLoadType == 'body'}" styleClass="documentBody" >
													<xp:inputRichText
														loaded="true">
														<xp:this.value><![CDATA[#{javascript:
															return document1.getValue('Body');
														}]]></xp:this.value>
													</xp:inputRichText>
													<xp:fileDownload rows="30" id="fileDownload2" styleClass="documentFiles"
														displayLastModified="false" allowDelete="false"
														hideWhen="true" value="#{document1.Body}">
													</xp:fileDownload>
												</xp:panel>
											</xp:panel>
											<xp:panel xp:key="postMeta" id="reviewDetails">
												<xe:listInline>
													<xp:text xp:key="authorName" escape="true" styleClass="documentAuthor" id="computedField2">
														<xp:this.value><![CDATA[#{javascript:peopleBean.getPerson(document1.getItemValueString('From')).displayName}]]></xp:this.value>
													</xp:text>
													<span>
														<xp:text value="Edited "></xp:text>
														<xp:text
															value="#{javascript: @Modified()}">
															<xp:this.converter>
																<xp:convertDateTime type="both" timeStyle="short">
																</xp:convertDateTime>
															</xp:this.converter>
														</xp:text>
													</span>
													<xp:panel>
														<xp:this.rendered><![CDATA[#{javascript://
															var tagCount = document1.getItemValue('WebCategories').length;
															return tagCount > 0;
														}]]></xp:this.rendered>
														<xp:label value="Tags: "></xp:label>
														<xp:repeat id="tagsRepeat" value="#{javascript:document1.getItemValue('Categories')}" var="tagName" indexVar="tagIndex" styleClass="documentTags">
															<xp:text rendered="#{javascript: tagIndex !== 0}" value=", "></xp:text>
															<xp:link text="#{tagName}" value="/allDocumentsByTag.xsp">
																<xp:this.parameters>
																	<xp:parameter name="categoryFilter" value="#{tagName}"></xp:parameter>
																</xp:this.parameters>
															</xp:link>
														</xp:repeat>
													</xp:panel>
													<xp:panel rendered="#{javascript: viewScope.mainDetailLoadType == 'body' }">
														
													</xp:panel>
													<xp:panel>
														<xp:this.rendered><![CDATA[#{javascript://
															
															if (viewScope.mainDetailLoadType == 'body' && document1.isResponse()) {
																var document:NotesDocument = document1.getDocument(),
																		parentID = document.getParentDocumentUNID(),
																		parentDoc = database.getDocumentByUNID(parentID),
																		parentSubject = parentDoc.getItemValueString('Subject'),
																		author = peopleBean.getPerson(document.getItemValueString('From')).displayName;
																		
																	requestScope.parentID = parentID;
																	requestScope.parentSubject = parentSubject;
																	requestScope.author = author;
																	
																	return true;
															}
															return false;
														}]]></xp:this.rendered>
														<xp:label value="Response to: "></xp:label>
														<xp:link value="/viewDocument.xsp">
															<xp:this.text><![CDATA[#{javascript://
																return requestScope.parentSubject;
															}]]></xp:this.text>
															<xp:this.parameters>
																<xp:parameter name="documentId">
																	<xp:this.value><![CDATA[#{javascript:
																		return requestScope.parentID;
																	}]]></xp:this.value>
																</xp:parameter>
															</xp:this.parameters>
														</xp:link>
														<xp:label>
															<xp:this.value><![CDATA[#{javascript://
																return " by " + requestScope.author;
															}]]></xp:this.value>
														</xp:label>
													</xp:panel>
													
												</xe:listInline>
												<xe:listInline>
													<xp:label>
														<xp:this.rendered><![CDATA[#{javascript:
															return !document1.isResponse() && viewScope.mainDetailLoadType == 'body';
														}]]></xp:this.rendered>
														<xp:this.value><![CDATA[#{javascript:
															var status = document1.getItemValueInteger('Status'),
																isSubmitted = document1.getItemValueString('SUBMITTED') === DocLib.Review.Submitted,
																msg;
																
															if(status == DocLib.Review.Status.InReview && isSubmitted) {
																msg = strings.getString('document.reviewStatus.inReview');
															} else if(status === DocLib.Review.Status.Complete) {
																msg = strings.getString('document.reviewStatus.reviewComplete');
															} else {
																msg = strings.getString('document.reviewStatus.notSubmitted');
															}
															return I18n.format(strings.getString('document.reviewStatus'), msg);
														}]]></xp:this.value>
													</xp:label>
													<xp:panel>
														<xp:this.rendered><![CDATA[#{javascript:
															return viewScope.mainDetailLoadType == 'body' && document1.getItemValueString('SUBMITTED') === DocLib.Review.Submitted && document1.getItemValueInteger('ReviewTime');
														}]]></xp:this.rendered>
														<xp:label value="Due "></xp:label>
														<xp:label>
															<xp:this.value><![CDATA[#{javascript://
																var reviewTime = document1.getItemValueInteger('ReviewTime'),
																	newDate = new Date();
																	newDate.setDate(@Created().getDate() + reviewTime);
																return newDate;
															}]]></xp:this.value>
															<xp:this.converter>
																<xp:convertDateTime
																	dateStyle="medium" type="date">
																</xp:convertDateTime>
															</xp:this.converter>
														</xp:label>
													</xp:panel>
												</xe:listInline>
												<xe:listInline rendered="#{javascript: viewScope.mainDetailLoadType === 'body'}">
													<xp:panel>
														<xp:this.rendered><![CDATA[#{javascript://
															return !document1.isResponse() && document1.getItemValueString('SUBMITTED') === DocLib.Review.Submitted && viewScope.mainDetailLoadType == 'body';
														}]]></xp:this.rendered>
														<xp:label value="Reviewers: "></xp:label>
														<xp:text id="reviewersList" rendered="#{!viewScope.showReviewers}">
															<xp:this.value><![CDATA[#{javascript://
																var reviewers = document1.getItemValue('ReviewerList'),
																	reviewerCount = reviewers.length,
																	showReviewerCount = (reviewerCount > 2) ? 2 : reviewerCount,
																	value = '',
																	i;
																
																for(i = 0; i < showReviewerCount; i++) {
																	value += peopleBean.getPerson(reviewers[i]).displayName;
																	if (i === (reviewerCount - 1)) {
																		value += '.';
																	} else {
																		value += ', ';
																	}
																}
																if(showReviewerCount !== reviewerCount) {
																	value += ' and ' + (reviewerCount - showReviewerCount) + ' more.';
																}
																return value;
															}]]></xp:this.value>
														</xp:text>
														<xp:repeat value="#{document1.ReviewerList}" var="reviewer" indexVar="reviewerIndex" rendered="#{viewScope.showReviewers}">
															<xp:text>
																<xp:this.value><![CDATA[#{javascript:
																	var reviewerCount = document1.getItemValue('ReviewerList').length,
																		reviewerName = peopleBean.getPerson(reviewer).displayName;
																	
																	if (reviewerIndex === (reviewerCount - 1)) {
																		return reviewerName + '.';
																	} else {
																		return reviewerName + ', ';
																	}
																}]]></xp:this.value>
															</xp:text>
														</xp:repeat>
														<xp:link text=" Show all reviewers" id="link4">
															<xp:this.rendered><![CDATA[#{javascript://
																var reviewers = document1.getItemValue('ReviewerList');
																return (reviewers.length > 2) && !viewScope.showReviewers;
															}]]></xp:this.rendered>
															<xp:eventHandler
																event="onclick" submit="true" refreshMode="partial" refreshId="reviewDetails">
																<xp:this.action><![CDATA[#{javascript://
																	viewScope.showReviewers = true;
																}]]></xp:this.action>
															</xp:eventHandler>
														</xp:link>
														<xp:link text=" Hide Reviewers" rendered="#{viewScope.showReviewers}">
															<xp:eventHandler
																event="onclick" submit="true" refreshMode="partial" refreshId="reviewDetails">
																<xp:this.action><![CDATA[#{javascript://
																	viewScope.showReviewers = false;
																}]]></xp:this.action>
															</xp:eventHandler>
														</xp:link>
													</xp:panel>
													<xp:link text="Show review settings" id="link5">
														<xp:this.rendered><![CDATA[#{javascript:
															return (document1.getItemValueString('SUBMITTED') === DocLib.Review.Submitted) && !viewScope.showReviewSettings;
														}]]></xp:this.rendered>
														<xp:eventHandler
															event="onclick" submit="true" refreshMode="partial" refreshId="reviewDetails">
															<xp:this.action><![CDATA[#{javascript://
																viewScope.showReviewSettings = true;
															}]]></xp:this.action>
														</xp:eventHandler>
													</xp:link>
												</xe:listInline>
												
												<xe:listInline rendered="#{viewScope.showReviewSettings}">
													<span>
														<xp:label value="Review type: "></xp:label>
														<xp:text>
															<xp:this.value><![CDATA[#{javascript://
																var value = document1.getItemValueString('ReviewType'),
																	msg;
																switch(value) {
																	case DocLib.Review.Type.OneReviewer:
																		msg = strings.getString('document.reviewType.oneReviewer');
																		break;
																	case DocLib.Review.Type.AllReviewers:
																		msg = strings.getString('document.reviewType.allReviewers');
																		break;
																}
																return msg;
															}]]></xp:this.value>
														</xp:text>
													</span>
													<xp:text>
														<xp:this.value><![CDATA[#{javascript://
															var value = document1.getItemValueString('ReviewWindow'),
																msg;
															switch(value) {
																case '0':
																	msg = strings.getString('document.reviewTimeLimit.noTimeLimit');
																	break;
																case '1':
																	msg = strings.getString('document.reviewTimeLimit.moveToNext');
																	break;
																case '2':
																	msg = strings.getString('document.reviewTimeLimit.keepSending');
																	break;
															}
															return msg;
														}]]></xp:this.value>
													</xp:text>
													<span>
														<xp:text>
															<xp:this.value><![CDATA[#{javascript://
																var value = document1.getItemValueString('NotifyAfter'),
																	msg;
																switch(value) {
																	case DocLib.Review.NotifyAfter.FinalReviewer:
																		msg = strings.getString('document.reviewNotify.finalReviewer');
																		break;
																	case DocLib.Review.NotifyAfter.EachReviewer:
																		msg = strings.getString('document.reviewNotify.eachReviewer');
																		break;
																}
																return msg + '. ';
															}]]></xp:this.value>
														</xp:text>
														<xp:link text="Hide review settings" id="link6">
														<xp:this.rendered><![CDATA[#{javascript:
															return (document1.getItemValueString('SUBMITTED') === DocLib.Review.Submitted) && viewScope.showReviewSettings;
														}]]></xp:this.rendered>
														<xp:eventHandler
															event="onclick" submit="true" refreshMode="partial" refreshId="reviewDetails">
															<xp:this.action><![CDATA[#{javascript://
																viewScope.showReviewSettings = false;
															}]]></xp:this.action>
														</xp:eventHandler>
													</xp:link>
													</span>
												</xe:listInline>
											</xp:panel>
											<xp:div xp:key="postActions">
												<xe:listInline rendered="#{javascript: viewScope.mainDetailLoadType == 'abstract' }">
													<xp:link escape="true" id="currentMoreLink" text="More...">
														<xp:eventHandler event="onclick" submit="true" refreshMode="partial" disableValidators="true" refreshId="forumCC">
															<xp:this.action><![CDATA[#{javascript://
																viewScope.mainDetailLoadType = 'body';
															}]]></xp:this.action>
														</xp:eventHandler>
													</xp:link>
													<xp:link text="Reply">
														<xp:this.loaded><![CDATA[${javascript://
																(userBean.accessLevel >= lotus.domino.ACL.LEVEL_AUTHOR) && userBean.canCreateDocs
														}]]></xp:this.loaded>
														<xp:eventHandler event="onclick" submit="true"
															refreshMode="partial" disableValidators="true" refreshId="forumCC">
															<xp:this.action>
																<xp:actionGroup>
																	<xp:actionGroup
																		condition="#{javascript: TopicThreadState.isPromptChangeEditArea() }">
																		<xp:confirm
																			message="#{strings.cancel_editing_and_create_reply}">
																		</xp:confirm>
																	</xp:actionGroup>
						
																	<xp:executeScript>
																		<xp:this.script><![CDATA[#{javascript://
																			requestScope.currentDocForm = document1.getForm();
																			TopicThreadState.showCurrentNewReply();
																		}]]></xp:this.script>
																	</xp:executeScript>
																</xp:actionGroup>
															</xp:this.action>
														</xp:eventHandler>
													</xp:link>
												</xe:listInline>
													
												<xe:listInline rendered="#{javascript: viewScope.mainDetailLoadType == 'body' }">
													<xp:link escape="true" id="link2" text="Hide">
														<xp:eventHandler event="onclick" submit="true" refreshMode="partial" disableValidators="true" refreshId="forumCC">
															<xp:this.action><![CDATA[#{javascript://
																viewScope.mainDetailLoadType = 'abstract';
															}]]></xp:this.action>
														</xp:eventHandler>
													</xp:link>
													<xp:link escape="true" text="Edit" id="currentEditLink">
														<xp:this.loaded><![CDATA[${javascript://
															(userBean.accessLevel >= lotus.domino.ACL.LEVEL_AUTHOR) && userBean.canCreateDocs && (@UserName() !== "Anonymous")
														}]]></xp:this.loaded>
														<xp:this.rendered><![CDATA[#{javascript:
															if (document1.getItemValueString('SUBMITTED') === DocLib.Review.Submitted && document1.isResponse()) {
																return false;
															}
															return true;
														}]]></xp:this.rendered>
														<xp:eventHandler event="onclick" submit="true"
															refreshMode="partial" immediate="true" refreshId="forumCC">
															<xp:this.action>
																<xp:actionGroup>
																	<xp:actionGroup
																		condition="#{javascript: TopicThreadState.isPromptChangeEditArea() }">
																		<xp:confirm
																			message="#{strings.cancel_editing_and_edit_other}">
																		</xp:confirm>
																	</xp:actionGroup>

																	<xp:executeScript>
																		<xp:this.script><![CDATA[#{javascript://
																			TopicThreadState.showCurrentEdit();
																		}]]></xp:this.script>
																	</xp:executeScript>
																</xp:actionGroup>
															</xp:this.action>
														</xp:eventHandler>
													</xp:link>
													<xp:link text="Reply">
														<xp:this.loaded><![CDATA[${javascript://
																(userBean.accessLevel >= lotus.domino.ACL.LEVEL_AUTHOR) && userBean.canCreateDocs
														}]]></xp:this.loaded>
														<xp:eventHandler event="onclick" submit="true"
															refreshMode="partial" disableValidators="true" refreshId="forumCC">
															<xp:this.action>
																<xp:actionGroup>
																	<xp:actionGroup
																		condition="#{javascript: TopicThreadState.isPromptChangeEditArea() }">
																		<xp:confirm
																			message="#{strings.cancel_editing_and_create_reply}">
																		</xp:confirm>
																	</xp:actionGroup>
						
																	<xp:executeScript>
																		<xp:this.script><![CDATA[#{javascript://
																			requestScope.currentDocForm = document1.getForm();
																			TopicThreadState.showCurrentNewReply();
																		}]]></xp:this.script>
																	</xp:executeScript>
																</xp:actionGroup>
															</xp:this.action>
														</xp:eventHandler>
													</xp:link>
													<xp:link text="Delete" id="link1">
														<xp:this.loaded><![CDATA[${javascript://
																(userBean.accessLevel >= lotus.domino.ACL.LEVEL_AUTHOR) && userBean.canDeleteDocs
															}]]></xp:this.loaded>
															<xp:this.rendered><![CDATA[#{javascript://
																var responses = document1.getDocument().getResponses();
																if(!responses || responses.getCount() == 0){
																	return true;
																}
																return false;
															}]]></xp:this.rendered>
														<xp:eventHandler event="onclick"
															submit="true" refreshMode="complete">
															<xp:this.action>
																<xp:actionGroup>
																	<xp:deleteDocument
																		name="#{javascript:sessionScope.webFrom}"
																		message="#{strings.delete_document}">
																	</xp:deleteDocument>
																</xp:actionGroup>
															</xp:this.action>
														</xp:eventHandler>
													</xp:link>
												</xe:listInline>
											</xp:div>
										</xp:this.facets>
									</xe:forumPost>
								</xe:dynamicContent>
							</xp:panel>
							<xp:panel xp:key="editTopic">
								EDIT TOPIC 1
							</xp:panel>
							<xp:panel xp:key="editResponse">
								<xc:rtaForm
									id="editCurrentResponse2CC"
									documentId="#{param.documentId}"
									parentId="#{javascript: null}"
									formName="Document">
								</xc:rtaForm>
							</xp:panel>
							<xp:panel xp:key="editResponseToResponse">
								<xc:rtaForm id="rtaForm1"
									documentId="#{param.documentId}"
									parentId="#{javascript: null}" formName="ResponseToResponse">
								</xc:rtaForm>
							</xp:panel>
						</xe:this.facets>
					</xe:dynamicContent>
				</xp:panel>

				<xp:div id="newReplyToCurrentDiv">
					<xe:dynamicContent id="newReplyToCurrentArea">
						<xp:panel loaded="${javascript: TopicThreadState.isCurrentNewReply() }">
							<xc:rtaForm id="rtaForm2"
								documentId="#{javascript: null}"
								parentId="#{param.documentId}" formName="ResponseToResponse">
							</xc:rtaForm>
						</xp:panel>
					</xe:dynamicContent>
				</xp:div>
				
				<xp:panel styleClass="documentShowHideDetails" rendered="#{javascript:getComponent('forumView1').getDataModel().isRowAvailable()}">
					<xe:pagerDetail id="pagerDetail1" partialExecute="false" for="forumView1">
					</xe:pagerDetail>
				</xp:panel>
				
				<xe:forumView id="forumView1" var="viewEntry" rows="10"
					expandedDetail="true" openDocAsReadonly="false"
					detailsOnClient="false" collapsibleDetail="true">

					<xe:this.data>
						<xp:dominoView var="view1" viewName="AllThreads"
							ignoreRequestParams="true" dataCache="id"
							parentId="#{param.documentId}" expandLevel="16">
						</xp:dominoView>
					</xe:this.data>

					<xe:this.facets>						
						<xp:panel xp:key="summary">
							<xe:listInline>
								<xp:link id="summaryTopicLink"
									text="#{viewEntry.Subject}" value="/viewDocument.xsp">
									<xp:this.parameters>
										<xp:parameter name="documentId"
											value="#{javascript: viewEntry.getUniversalID() }">
										</xp:parameter>
									</xp:this.parameters>
								</xp:link>
								<xp:text>
									<xp:this.value><![CDATA[#{javascript://
										var authorName = peopleBean.getPerson(viewEntry.getColumnValue('From')).displayName;
										return "Created by: " + authorName;
									}]]></xp:this.value>
								</xp:text>
								<xp:text>
									<xp:this.value><![CDATA[#{javascript://
										var created = viewEntry.getColumnValue("Date");
										return "Created: " + created;
									}]]></xp:this.value>
								</xp:text>
							</xe:listInline>
						</xp:panel>
						
						<xp:panel xp:key="detail" id="panel1">
							<xp:this.rendered><![CDATA[#{javascript://
								requestScope.detailDisplayType = TopicThreadState.isRowShowBody(viewEntry.getPosition())? 'body' : 'abstract';
								true;
							}]]></xp:this.rendered>

							<xe:switchFacet defaultFacet="read">
								<xe:this.selectedFacet><![CDATA[#{javascript://
									if( TopicThreadState.isRowEdit(viewEntry.getPosition())){
										return 'edit';
									}
								}]]></xe:this.selectedFacet>

								<xe:this.facets>
									<xp:panel xp:key="read">
										<xe:dynamicContent
											id="rowDetailArea">
											<xc:viewTopic></xc:viewTopic>
										</xe:dynamicContent>
									</xp:panel>
									<xp:panel xp:key="edit">
										<xe:dynamicContent
											id="rowEditArea">
											<xc:rtaForm id="editRowCC"
												documentId="#{javascript: viewEntry.getUniversalID() }"
												parentId="#{javascript: null}"
												loaded="${javascript: TopicThreadState.isRowEditAny() }">
												<xc:this.formName><![CDATA[${javascript://
													var rowDoc = database.getDocumentByUNID(viewEntry.getUniversalID());
													return rowDoc.getItemValueString('form');
												}]]></xc:this.formName>
											</xc:rtaForm>
										</xe:dynamicContent>
									</xp:panel>
								</xe:this.facets>
							</xe:switchFacet>


							<xp:panel
								rendered="#{javascript: TopicThreadState.isRowNewReply(viewEntry.getPosition()) }">
								<xe:dynamicContent id="rowReplyArea">
									<xc:rtaForm id="newRowResponseCC"
										documentId="#{javascript: null}"
										parentId="#{javascript: viewEntry.getUniversalID() }"
										loaded="${javascript: TopicThreadState.isRowNewReplyAny() }"
										formName="ResponseToResponse">
									</xc:rtaForm>
								</xe:dynamicContent>
							</xp:panel>
						</xp:panel>
					</xe:this.facets>
					
					<xp:this.facets>
						<xp:link text="Show more..." id="showMoreLink"
							xp:key="footer">
							<xp:this.rendered><![CDATA[#{javascript://
								var forumView1:com.ibm.xsp.component.UIDataIterator = getComponent("forumView1");
								forumView1.getRows() <= forumView1.getRowCount()
							}]]></xp:this.rendered>
							<xp:eventHandler event="onclick" submit="true"
								refreshMode="complete">
								<xp:this.action><![CDATA[#{javascript://
									var addCount = 100;
									var forumView1:com.ibm.xsp.component.UIDataIterator = getComponent("forumView1");
									forumView1.setRows(forumView1.getRows()+addCount);
								}]]></xp:this.action>
							</xp:eventHandler>
						</xp:link>
					</xp:this.facets>
					
				</xe:forumView>
			</xp:panel>
		</xe:this.facets>
	</xc:layout>
</xp:view>